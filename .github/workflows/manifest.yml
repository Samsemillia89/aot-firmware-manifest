name: Build & Deploy firmware manifest (push / manual)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      fw_repos:
        description: "Kommagetrennt: owner/repo[,owner/repo...]"
        required: false
        default: ""
      channel:
        description: "stable | beta"
        required: false
        default: "stable"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-deploy
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Build manifest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}     # optional, für höheres API-Limit
          FW_REPOS: ${{ inputs.fw_repos || '' }}    # z.B. "Samsemillia89/AOT-Controller,Samsemillia89/AOT-Display"
          FW_CHANNEL: ${{ inputs.channel || 'stable' }}
          FW_OUT_DIR: dist
          FW_OUT_FILE: firmware.json
        run: |
          set -e
          mkdir -p dist
          python manifest_builder.py
          echo "---- manifest preview ----"
          cat dist/firmware.json || true

      - name: Upload artifact (manifest)
        uses: actions/upload-artifact@v4
        with:
          name: firmware-manifest
          path: dist/firmware.json

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
